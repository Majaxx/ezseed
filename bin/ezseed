#!/usr/bin/env node

var pkg = require('../package')
  , program = require('../cli/helpers/mnomnom')(require('nomnom'), '')
  , config
  , p = require('path')
  , helper = require('../cli/helpers/promise')
  , _ = require('lodash')
  , constants = require('../constants')
  , fs = require('fs')
  , logger = require('ezseed-logger')()
  , rainbow = require('ansi-rainbow').r

if(!fs.existsSync(constants.HOME)) {
  require('mkdirp').sync(constants.HOME)
}

var i18n = require('i18n').configure({
  locales:['en', 'fr'],
  defaultLocale: 'fr',
  directory: p.resolve(__dirname, '..', 'locales')
})

//Detect first launch
try {
  config = require(constants.CONFIG_FILE)

  if(process.env.EZSEED_ENV == 'install') {
    helper.exit('npm update')(0)
  }

} catch(e) {
  var argv = require('minimist')(process.argv.slice(2));
  argv.new = true
  return require('../cli/install')(argv)
}

i18n = require('i18n')
i18n.setLocale(config.lang)

var updateNotifier = require('update-notifier')

updateNotifier({packageName: pkg.name, packageVersion: pkg.version}).notify()

program.options({
  version: {
    flag: true,
    abbr: 'v',
    callback: function() {
       return pkg.version;
    }
  },
  quiet: {
    flag: true,
    abbr: 'q'
  }
})

program
  .commands('start stop restart')
  .callback(require('../cli/commands/daemon').ezseed)
  .help('the ezseed daemon (or specified daemon watcher, ezseed, rtorrent, transmission)')

program
  .commands('rtorrent transmission')
  .callback(require('../cli/daemon'))
  .options({
    command: {
      position: 1,
      choices: ['start', 'stop', 'restart'],
      // help: 'One of start|stop|restart',
      required: true
    },
    user: {
      abbr: 'u',
      help: 'Specify user to restart (if not specified we restart all of them)'
    }
  })

program
  .command('install')
  .options({
    client: {
      position: 1,
      help: "Client to install"
    },
    skipserver: {
      flag: true,
      help: "Skip server installation"
    },
    skipclient: {
      flag: true,
      help: "Skip client installation"
    },
    skipconfig: {
      flag: true,
      help: "Skip config creation"
    },
    force: {
      flag: true,
      abbr: "f",
      help: "Force"
    }
  })
  .callback(function(opts) {
    //no client, install ezseed
    if(opts.client === undefined) {
      return require('../cli/install')(opts)
    } else if(opts.client == 'rtorrent' || opts.client == 'transmission'){
      //else install the required client
      require('../cli/commands/install').client(opts.client)()
      .then(helper.exit(i18n.__('Client installation')))
      .catch(helper.exit(i18n.__('Client installation')))
    } else {
      helper.exit(opts.client + i18n.__(' is not a valid entry for client, install'))(1)
    }
  })

program
  .command('config')
  .options({
    key: {
      position: 1,
      help: 'key',
      required: false
    },
    value: {
      position: 2,
      help: "value",
      required: false
    },
    force: {
      flag: true,
      abbr: 'f',
      help: "Force"
    }
  })
  .callback(function(opts) {

    if(opts.key && opts.value) {

      if(!config) {
        logger.error('No configuration file found - did you ran ezseed install?')
        return process.exit()
      }

      if(!opts.force && !config.hasOwnProperty(opts.key)) {
        logger.error('Allowed keys are %s', rainbow(Object.keys(config).join(', ')))
        return process.exit()
      }

      config[opts.key] = opts.value

      fs.writeFileSync(constants.CONFIG_FILE, 'module.exports = '+JSON.stringify(config, undefined, 2))
      logger.info(i18n.__('Configuration saved in %s', constants.CONFIG_FILE))

      return process.exit()
    } else {
      opts = _.extend(opts, {skipserver: true, skipadmin: true, skipclient: true})
      return require('../cli/install')(opts)
    }
  })

program.command('useradd')
  .options({
    username: {
      position: 1,
      help: "Username",
      required: true
    },
    client: {
      position: 2,
      help: "Client to install",
      choices: ['rtorrent', 'transmission', 'none']
    },
    password: {
      abbr: 'p',
      help: 'User password',
    },
    role: {
      abbr: 'r',
      choices: ['user', 'admin'],
    }
  })
  .callback(require('../cli/useradd'))

program.command('userdel')
  .options({
    username: {
      position: 1,
      help: "Username",
      required: true
    },
    client: {
      position: 2,
      help: "Client to install",
      choices: ['rtorrent', 'transmission', 'none']
    },
    force: {
      flag: true,
      abbr: "f",
      help: "Force"
    }
  })
  .callback(require('../cli/userdel'))

program.command('usermod')
  .options({
    username: {
      position: 1,
      required: true
    },
    key: {
      position: 2,
      choices: ['password', 'client', 'role', 'spaceLeft', 'port'],
      required: true
    },
    value: {
      position: 3,
      required: true
    }
  })
  .callback(require('../cli/usermod'))

require('ezseed-database')(function() {
  program.parse()
})
